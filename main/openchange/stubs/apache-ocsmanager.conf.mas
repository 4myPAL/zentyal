<%doc>
    Template to set the apache configuration file for ocsmanager provided
    service:
        * Autodiscover (only HTTPs)
        * EWS (freebusy, outofoffice, etc. only HTTPs)
        * RPC proxy (HTTP or HTTPs)

Parameters:

    group - String the group that must live apache-perl process
            Default value: www-data
    user  - String the user that the apache-perl process must be
            Default value: www-data
    rpcproxyAuthCacheDir - The directory to use as the auth cache.
    domains - Array ref containing the configuration for the different
              virtual domains
</%doc>
<%args>
    $group => 'www-data'
    $user => 'www-data'
    $rpcproxyAuthCacheDir
    $domains => []
</%args>
<%init>
    use EBox::Sudo;
    my $sysinfo = EBox::Global->modInstance('sysinfo');
    my $hostName = $sysinfo->hostName();
</%init>

user  <% $user %>
group <% $group %>

WSGILazyInitialization On
WSGIPythonPath /usr/lib/openchange/web/rpcproxy
WSGIScriptAlias /rpc/rpcproxy.dll /usr/lib/openchange/web/rpcproxy/rpcproxy.wsgi
WSGIScriptAlias /rpcwithcert/rpcproxy.dll /usr/lib/openchange/web/rpcproxy/rpcproxy.wsgi

% foreach my $item (@{$domains}) {
<& .domainVHost,
    httpPort        => 80,
    httpsPort       => 443,
    hostname        => $hostName,
    domain          => $item->{domain},
    certificate     => $item->{certificate},
    rpcproxyAuthCacheDir => $rpcproxyAuthCacheDir,
    autodiscover    => $item->{autodiscover},
    ews             => $item->{ews},
    rpcProxyHttp    => $item->{rpcProxyHttp},
    rpcProxyHttps   => $item->{rpcProxyHttps},
    webmailHttp     => $item->{webmailHttp},
    webmailHttps    => $item->{webmailHttps},
&>
% }

<%def .domainVHost>
<%args>
    $httpPort => 80
    $httpsPort => 443
    $hostname
    $domain
    $certificate
    $rpcproxyAuthCacheDir
    $autodiscover => 1
    $ews => 1
    $rpcProxyHttp => 0
    $rpcProxyHttps => 0
    $webmailHttp => 0
    $webmailHttps => 0
</%args>
<%init>
    my $http = ($webmailHttp or $rpcProxyHttp);
    my $https = ($autodiscover or $rpcProxyHttps or $webmailHttps);
    $https &= EBox::Sudo::fileTest('-f', $certificate);
</%init>
% if ($http) {
<VirtualHost *:<% $httpPort %>>
    ServerName <% $hostname %>.<% $domain %>
    ServerAlias autodiscover.<% $domain %>

% if ($rpcProxyHttp) {
    # HTTPs RPC Proxy (extremely high timeout required by clients)
    Timeout 300
    KeepAlive On
    KeepAliveTimeout 120
    MaxKeepAliveRequests 500
    AddDefaultCharset utf-8

    Include /etc/apache2/mods-available/wsgi.load
    Include /etc/apache2/mods-available/env.load

    <Directory /usr/lib/openchange/web/rpcproxy/>
        SetEnv RPCPROXY_LOGLEVEL DEBUG
        SetEnv NTLMAUTHHANDLER_WORKDIR <% $rpcproxyAuthCacheDir %>
        SetEnv SAMBA_HOST 127.0.0.1
        WSGIPassAuthorization On
        WSGIProcessGroup %{GLOBAL}
        Require all granted
    </Directory>
% }

% if ($webmailHttp) {
    #### SOGo webmail begin ####
    Alias /SOGo.woa/WebServerResources/ \
        /usr/lib/GNUstep/SOGo/WebServerResources/
    Alias /SOGo/WebServerResources/ \
        /usr/lib/GNUstep/SOGo/WebServerResources/
    AliasMatch /SOGo/so/ControlPanel/Products/(.*)/Resources/(.*) \
        /usr/lib/GNUstep/SOGo/$1.SOGo/Resources/$2

    <Directory /usr/lib/GNUstep/SOGo/>
        AllowOverride None
        Require all granted

        # Explicitly allow caching of static content to avoid browser specific
        # behavior. A resource URL MUST change in order to have the client
        # load the new version.
        <IfModule expires_module>
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
        </IfModule>
    </Directory>

    <LocationMatch "^/SOGo/so/ControlPanel/Products/.*UI/Resources/.*\.(jpg|png|gif|css|js)">
        SetHandler default-handler
    </LocationMatch>

    ## Uncomment the following to enable proxy-side authentication, you will then
    ## need to set the "SOGoTrustProxyAuthentication" SOGo user default to YES and
    ## adjust the "x-webobjects-remote-user" proxy header in the "Proxy" section
    ## below.
    #<Location /SOGo>
    #  AuthType XXX
    #  Require valid-user
    #  SetEnv proxy-nokeepalive 1
    #  Allow from all
    #</Location>
    ProxyRequests Off
    SetEnv proxy-nokeepalive 1
    ProxyPreserveHost On

    # When using CAS, you should uncomment this and install cas-proxy-validate.py
    # in /usr/lib/cgi-bin to reduce server overloading
    #
    # ProxyPass /SOGo/casProxy http://localhost/cgi-bin/cas-proxy-validate.py
    # <Proxy http://localhost/app/cas-proxy-validate.py>
    #   Order deny,allow
    #   Allow from your-cas-host-addr
    # </Proxy>

    ProxyPass /SOGo http://127.0.0.1:20000/SOGo retry=0
    ProxyPass /sogo/ http://127.0.0.1:20000/SOGo
    ProxyPass /sogo http://127.0.0.1:20000/SOGo
    ProxyPass /webmail/ http://127.0.0.1:20000/SOGo
    ProxyPass /webmail http://127.0.0.1:20000/SOGo

    <Proxy http://127.0.0.1:20000/SOGo>
        ## When using proxy-side autentication, you need to uncomment and
        ## adjust the following line:
        #  RequestHeader set "x-webobjects-remote-user" "%{REMOTE_USER}e"
        RequestHeader set "x-webobjects-server-protocol" "HTTP/1.0"
        AddDefaultCharset UTF-8
        Require all granted
    </Proxy>

    # For apple autoconfiguration
    <IfModule rewrite_module>
        RewriteEngine On
        RewriteRule ^/.well-known/caldav/?$ /SOGo/dav [R=301]
    </IfModule>
    #### SOGo webmail end ####
% }
</VirtualHost>
% }

% if ($https) {
<VirtualHost *:<% $httpsPort %>>
    ServerName <% $hostname %>.<% $domain %>
    ServerAlias autodiscover.<% $domain %>

    SSLEngine on
    SSLCertificateFile <% $certificate %>

    ProxyAddHeaders On

% if ($autodiscover) {
    # Autodiscover
    ProxyPass /autodiscover http://127.0.0.1:5000/autodiscover
% } else {
    # Autodiscover disabled
% }

% if ($ews) {
    # EWS
    ProxyPass /ews http://127.0.0.1:5000/ews
% } else {
    # EWS disabled
% }

% if ($rpcProxyHttps) {
    # HTTPs RPC Proxy (extremely high timeout required by clients)
    Timeout 300
    KeepAlive On
    KeepAliveTimeout 120
    MaxKeepAliveRequests 500
    AddDefaultCharset utf-8

    Include /etc/apache2/mods-available/wsgi.load
    Include /etc/apache2/mods-available/env.load

    <Directory /usr/lib/openchange/web/rpcproxy/>
        SetEnv RPCPROXY_LOGLEVEL DEBUG
        SetEnv NTLMAUTHHANDLER_WORKDIR <% $rpcproxyAuthCacheDir %>
        SetEnv SAMBA_HOST 127.0.0.1
        WSGIPassAuthorization On
        WSGIProcessGroup %{GLOBAL}
        Require all granted
    </Directory>
% }

% if ($webmailHttps) {
    #### SOGo webmail begin ####
    Alias /SOGo.woa/WebServerResources/ \
        /usr/lib/GNUstep/SOGo/WebServerResources/
    Alias /SOGo/WebServerResources/ \
        /usr/lib/GNUstep/SOGo/WebServerResources/
    AliasMatch /SOGo/so/ControlPanel/Products/(.*)/Resources/(.*) \
        /usr/lib/GNUstep/SOGo/$1.SOGo/Resources/$2

    <Directory /usr/lib/GNUstep/SOGo/>
        AllowOverride None
        Require all granted

        # Explicitly allow caching of static content to avoid browser specific
        # behavior. A resource URL MUST change in order to have the client
        # load the new version.
        <IfModule expires_module>
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
        </IfModule>
    </Directory>

    <LocationMatch "^/SOGo/so/ControlPanel/Products/.*UI/Resources/.*\.(jpg|png|gif|css|js)">
        SetHandler default-handler
    </LocationMatch>

    ## Uncomment the following to enable proxy-side authentication, you will then
    ## need to set the "SOGoTrustProxyAuthentication" SOGo user default to YES and
    ## adjust the "x-webobjects-remote-user" proxy header in the "Proxy" section
    ## below.
    #<Location /SOGo>
    #  AuthType XXX
    #  Require valid-user
    #  SetEnv proxy-nokeepalive 1
    #  Allow from all
    #</Location>
    ProxyRequests Off
    SetEnv proxy-nokeepalive 1
    ProxyPreserveHost On

    # When using CAS, you should uncomment this and install cas-proxy-validate.py
    # in /usr/lib/cgi-bin to reduce server overloading
    #
    # ProxyPass /SOGo/casProxy http://localhost/cgi-bin/cas-proxy-validate.py
    # <Proxy http://localhost/app/cas-proxy-validate.py>
    #   Order deny,allow
    #   Allow from your-cas-host-addr
    # </Proxy>

    ProxyPass /SOGo http://127.0.0.1:20000/SOGo retry=0
    ProxyPass /sogo/ http://127.0.0.1:20000/SOGo
    ProxyPass /sogo http://127.0.0.1:20000/SOGo
    ProxyPass /webmail/ http://127.0.0.1:20000/SOGo
    ProxyPass /webmail http://127.0.0.1:20000/SOGo

    <Proxy http://127.0.0.1:20000/SOGo>
        ## When using proxy-side autentication, you need to uncomment and
        ## adjust the following line:
        #  RequestHeader set "x-webobjects-remote-user" "%{REMOTE_USER}e"
        RequestHeader set "x-webobjects-server-url" "https://%{REQUEST_HOST}e:<% $httpsPort %>"
        SetEnvIf Host "(.*):?" REQUEST_HOST=$1
        AddDefaultCharset UTF-8
        Require all granted
    </Proxy>

    # For apple autoconfiguration
    <IfModule rewrite_module>
        RewriteEngine On
        RewriteRule ^/.well-known/caldav/?$ /SOGo/dav [R=301]
    </IfModule>
    #### SOGo webmail end ####
% }
</VirtualHost>
% } else {
# HTTPs configuration for domain <% $domain %> skipped due to missing
# certificate (<% $certificate %>)
% }
</%def>
